---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: websites.spaship.io
  labels:
    spaship: operator
spec:
  group: spaship.io
  scope: Namespaced
  names:
    kind: Website
    singular: website
    plural: websites
  versions:
    - name: v1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                gitUrl:
                  type: string
                branch:
                  type: string
                dir:
                  type: string
                  default: .
                sslVerify:
                  type: boolean
                  default: true
                secretToken:
                  type: string
                previews:
                  type: boolean
                  default: false
                gitApiToken:
                  type: string
                displayName:
                  type: string
                envs:
                  type: object
                  properties:
                    included:
                      type: array
                      items:
                        type: string
                    excluded:
                      type: array
                      items:
                        type: string
              required:
                - gitUrl
                - secretToken
            status:
              type: object
              properties:
                status:
                  type: string
                  default: "Pending"
                envs:
                  type: array
                  items:
                    type: string
                message:
                  type: string
                updated:
                  type: string
      additionalPrinterColumns:
        - name: Git URL
          type: string
          description: Website Git URL
          jsonPath: .spec.gitUrl
        - name: Branch
          type: string
          description: Git branch
          jsonPath: .spec.branch
        - name: Dir
          type: string
          description: Sub directory within git repo
          jsonPath: .spec.dir
        - name: SSL Verify
          type: string
          description: Performs SSL verification
          jsonPath: .spec.sslVerify
        - name: Environments
          type: string
          description: Environments with info about ready containers
          jsonPath: .status.envs
        - name: Status
          type: string
          description: Status
          jsonPath: .status.status
        - name: Updated
          type: string
          description: Last Website Update
          jsonPath: .status.updated
        - name: Message
          type: string
          description: Status message
          jsonPath: .status.message
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spaship-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spaship-operator
  labels:
    spaship: operator
rules:
  - apiGroups: [ "spaship.io" ]
    resources: [ "websites/status" ]
    verbs: [ "get", "patch", "update" ]
  - apiGroups: [ "route.openshift.io" ]
    resources: [  "routes" ]
    verbs: [ "create", "update", "get", "watch", "list", "delete" ]
  # When APP_OPERATOR_ROUTER_MODE=openshift this permission needs to be enabled
  - apiGroups: [ "route.openshift.io" ]
    resources: [ "routes/custom-host" ]
    verbs: [ "create" ]
  # When APP_OPERATOR_ROUTER_MODE=ingress this permission needs to be enabled
  - apiGroups: [ "networking.k8s.io" ]
    resources: [  "ingresses" ]
    verbs: [ "create", "update", "get", "watch", "list", "delete" ]
  - apiGroups: [ "" ]
    resources: [  "configmaps", "services" ]
    verbs: [ "create", "update", "get", "watch", "list", "delete" ]
  - apiGroups: [ "apps" ]
    resources: [ "deployments" ]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spaship-website
  labels:
    spaship: user
rules:
  - apiGroups: [ "spaship.io" ]
    resources: [ "websites" ]
    verbs: [ "create", "update", "get", "watch", "list", "delete" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spaship-operator
  labels:
    spaship: operator
roleRef:
  kind: Role
  name: spaship-operator
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: spaship-operator
#    namespace: spaship-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spaship-operator-website
  labels:
    spaship: operator
roleRef:
  kind: Role
  name: spaship-website
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: spaship-operator
#    namespace: spaship-operator
---
apiVersion: v1
kind: Service
metadata:
  name: spaship-operator
  labels:
    spaship: operator
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: http
  selector:
    spaship: operator
    spaship-operator-layer: service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spaship-operator
  labels:
    app: spaship-operator
    spaship: operator
spec:
  selector:
    matchLabels:
      spaship: operator
      spaship-operator-layer: service
  replicas: 1
  template:
    metadata:
      labels:
        spaship: operator
        spaship-operator-layer: service
    spec:
      serviceAccountName: spaship-operator
      containers:
        - name: operator
          image: "quay.io/spaship/operator-jvm:1.3.5"
          livenessProbe:
            httpGet:
              path: "/health/live"
              port: 8080
            initialDelaySeconds: 5
            failureThreshold: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: "/health/ready"
              port: 8080
            initialDelaySeconds: 5
            failureThreshold: 5
            periodSeconds: 30
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 2
              memory: 500Mi
          ports:
            - containerPort: 8080
          # CACERTS Volume Mount
          #          volumeMounts:
          #            - mountPath: /deployments/config/cacerts
          #              name: cacerts
          env:
            # JAVA_OPTIONS including CACERTS
            #            - name: JAVA_OPTIONS
            #              value: "-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Djavax.net.ssl.trustStore=/deployments/config/cacerts/cacerts"
            - name: XDG_CONFIG_HOME
              value: "/deployments"
          envFrom:
            - configMapRef:
                name: "spaship-operator-config"
# CACERTS Volume
#      volumes:
#        - name: cacerts
#          secret:
#            secretName: spaship-operator-cacerts
